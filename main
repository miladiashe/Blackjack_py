import classes
start_money = 50
max_npc = 4


print('==========BlackJack=========')
New_Deck = classes.Deck(1)
# 덱 객체를 하나 생성, 들어가는 숫자는 사용하는 카드 벌수
Dealer = classes.Dealer()
You = classes.User(start_money)
NPC = []
playerNum = input('같이 플레이할 NPC 의 수를 입력해주세요. Max = 4')
playerNum = int(playerNum)
while playerNum > max_npc or playerNum <= 0:
    playerNum = input('최대 4명입니다. 다시 입력해 주세요.')
for i in range(0, int(playerNum)):
    NPC.append(classes.Player(start_money))
# scan number
# make player class 'scan' times

end = 0
# 게임이 끝났을 때 end 가 1이 된다
while end == 0:
    round_num = 1
    print('==========ROUND %d==========' % round_num)
    print('초기 자금은 %d 만원 입니다.' % start_money)
    print('베팅을 해 주시기 바랍니다.')
    You.betting()
    for i in range(0, playerNum):
        NPC[i].betting()
        print('NPC %d 님께서는 %d 만원을 거셨습니다.' % (i+1, NPC[i].bet_money))

    for i in range(0, 2):
        Dealer.give_card(New_Deck)
        You.give_card(New_Deck)
        for j in range(0, playerNum):
            NPC[j].give_card(New_Deck)

    # give two cards
    print('딜러의 카드', end=': ')
    Dealer.display_one_card()

    print('당신의 카드', end=': ')
    You.display_card()

    for i in range(0, playerNum):
        print("NPC %i의 카드" % (i+1), end=': ')
        NPC[i].display_card()
    # Display card(카드를 보여준다)

    print("당신의 차례입니다.")
    while You.status == 0:
        print("현재 당신의 카드입니다.")
        You.count_value()
        You.display_card()
        if You.win_or_not() == 21:
            print("블랙잭, 승리하셨습니다.")
            You.status = 21
            # 건 돈의 두 배를 받는다.
        elif You.win_or_not() == 0:
            print("21 초과로 패배입니다.")
            You.status = 1
            # 건 돈이 사라진다.
        else:
            if You.declare() == 0:
                print('stop')
                You.status = 2
            else:
                You.give_card(New_Deck)
                print("한 장 더 받으셨습니다.")
    input('확인하셨습니까? 아무 키나 눌러 주세요.')
    # user turn

    for i in range(0, playerNum):
        print("NPC %d 님의 차례입니다." % (i+1))
        while NPC[i].status == 0:
            print("현재 NPC %d 님의 카드입니다." % (i+1))
            NPC[i].count_value()
            NPC[i].display_card()
            if NPC[i].win_or_not() == 21:
                print("블랙잭, 승리하셨습니다.")
                NPC[i].status = 21
                # 건 돈의 두 배를 받는다.
            elif NPC[i].win_or_not() == 0:
                print("21 초과로 패배입니다.")
                NPC[i].status = 1
                # 건 돈이 사라진다.
            else:
                if NPC[i].declare() == 0:
                    print('stop')
                    NPC[i].status = 2
                else:
                    NPC[i].give_card(New_Deck)
        input('확인하셨습니까? 아무 키나 눌러 주세요.')

    # npc turn

    print("마지막으로, 제 차례입니다.")
    print("제가 받은 카드입니다.")
    Dealer.display_card()
    while Dealer.status == 0:
        Dealer.count_value()
        if Dealer.win_or_not() == 21:
            print("블랙잭, 저의 승리입니다.")
            Dealer.status = 21
            # 블랙잭인 플레이어 외의 전원이 패배
        elif Dealer.win_or_not() == 0:
            print("21 초과로 패배입니다.")
            Dealer.status = 1
            # 죽은 플레이어 외의 전원이 승리
        else:
            if Dealer.declare() == 0:
                print('카드의 합이 17 이상이므로 그만 받겠습니다.')
                Dealer.status = 2
                # 딜러보다 카드의 합이 높은 사람만 승리
            else:
                Dealer.give_card(New_Deck)
                print('한 장 더 받겠습니다.')
                Dealer.display_card()
    input('확인하셨습니까? 아무 키나 눌러 주세요.')

    if Dealer.status == 21:
        print('제가 블랙잭이므로 블랙잭이 아니라면 전부 돈을 잃으셨습니다.')
    elif Dealer.status == 1:
        print('딜러인 제가 죽었으므로 남아있는 분 전부 승리하셨습니다.')

    if Dealer.status == 21:
        if You.status == 21:
            print('축하합니다. 블랙잭으로 승리하셨습니다.')
            You.give_money(1)
            # 돈받음
        else:
            print('패배하셨습니다.')
            You.give_money(0)
            # 못받음
    elif Dealer.status == 1:
        if You.status == 1:
            print('패배하셨습니다.')
            You.give_money(0)
            # 못받음
        else:
            print('당신의 승리입니다.')
            You.give_money(1)
            # 돈받음
    else:
        if You.status == 1:
            print('패배하셨습니다.')
            You.give_money(0)
            # 딜러가 살았는데 내가 죽었으니 돈 못받음
        elif You.status == 21:
            print('축하합니다. 블랙잭으로 승리하셨습니다.')
            You.give_money(1)
            # 돈 받음, 대사 다르게
        elif You.hand_value > Dealer.hand_value:
            print('승리하셨습니다.')
            You.give_money(1)
            # 돈 받음
        elif You.hand_value == Dealer.hand_value:
            print('아슬아슬하게 승리하셨군요.')
            You.give_money(1)
            # 돈 받음, 대사 다르게
        else:
            print('패배하셨습니다.')
            You.give_money(0)
            # 돈 못받음
    # USER 승패 처리

    for i in range(0, playerNum)
        if Dealer.status == 21:
            if NPC[i].status == 21:
                print('축하합니다 NPC%d 님. 블랙잭으로 승리하셨습니다.' % (i+1))
                NPC[i].give_money(1)
                # 돈받음
            else:
                print('패배하셨습니다.')
                NPC[i].give_money(0)
                # 못받음
        elif Dealer.status == 1:
            if npc[i].status == 1:
                print('패배하셨습니다.')
                NPC[i].give_money(0)
                # 못받음
            else:
                print('당신의 승리입니다.')
                NPC[i].give_money(1)
                # 돈받음
        else:
            if NPC[i].status == 1:
                print('패배하셨습니다.')
                NPC[i].give_money(0)
                # 딜러가 살았는데 내가 죽었으니 돈 못받음
            elif NPC[i].status == 21:
                print('축하합니다. 블랙잭으로 승리하셨습니다.')
                NPC[i].give_money(1)
                # 돈 받음, 대사 다르게
            elif NPC[i].hand_value > Dealer.hand_value:
                print('승리하셨습니다.')
                NPC[i].give_money(1)
                # 돈 받음
            elif NPC[i].hand_value == Dealer.hand_value:
                print('아슬아슬하게 승리하셨군요.')
                NPC[i].give_money(1)
                # 돈 받음, 대사 다르게
            else:
                print('패배하셨습니다.')
                NPC[i].give_money(0)
                # 돈 못받음
    # NPC 승패 처리

    end = 1
    # 임시
# for i in range(0, 53):
#     print(New_Deck.FullDeck[0].print_card())
#     p1.give_card(New_Deck)
#     print(i)
